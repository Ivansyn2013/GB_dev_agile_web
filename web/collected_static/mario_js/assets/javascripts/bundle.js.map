{"version":3,"sources":["webpack:///webpack/bootstrap 6fcddf310a7d8b6e8b99","webpack:///./lib/entities/entity.js","webpack:///./lib/entities/sprite.js","webpack:///./lib/entities/goomba.js","webpack:///./lib/entities/koopa.js","webpack:///./lib/entities/mario.js","webpack:///./lib/entities/score.js","webpack:///./lib/map/level_1-1.js","webpack:///./lib/map/map_builder.js","webpack:///./lib/util/animation.js","webpack:///./lib/util/input.js","webpack:///./lib/util/movement.js","webpack:///./lib/util/physics.js","webpack:///./lib/util/render.js","webpack:///./lib/entities/block.js","webpack:///./lib/entities/breakable.js","webpack:///./lib/entities/coin.js","webpack:///./lib/entities/mushroom.js","webpack:///./lib/entities/scenery.js","webpack:///./lib/game.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA,2CAA2C,cAAc;;QAEzD;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;;;;;;;;AChEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACTc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACRD;AAAA;AAA8B;AACA;;AAEf,qBAAqB,wDAAM;AAC1C;AACA,uBAAuB,wDAAM;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP,gBAAgB,wDAAM;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;AC/DD;AAAA;AAA8B;AACA;;AAEf,oBAAoB,wDAAM;AACzC;AACA,uBAAuB,wDAAM;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP,kBAAkB,wDAAM;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACtGD;AAAA;AAA8B;AACA;;AAEf,oBAAoB,wDAAM;AACzC;AACA,uBAAuB,wDAAM;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP,sBAAsB,wDAAM;AAC5B,qBAAqB,wDAAM;AAC3B,qBAAqB,wDAAM;AAC3B,oBAAoB,wDAAM;;AAE1B,yBAAyB,wDAAM;AAC/B,wBAAwB,wDAAM;AAC9B,wBAAwB,wDAAM;AAC9B,uBAAuB,wDAAM;AAC7B,gBAAgB,wDAAM;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACnQc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACVD;AAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAAA;AAAA;;AAE6B;;;;;;;;ACxW/B;AAAA;AAAA;AAA+C;AACT;AACQ;;AAE/B;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,iEAAc;AAC1B;AACA,KAAK;;AAEL;AACA;AACA,YAAY,gEAAa;AACzB;AACA,KAAK;;AAEL;AACA;AACA,YAAY,mEAAgB;AAC5B;AACA;AACA,KAAK;;AAEL;AACA;AACA,YAAY,+DAAY;AACxB;AACA,KAAK;;AAEL;AACA;AACA,YAAY,qEAAkB;AAC9B;AACA;AACA,KAAK;;AAEL;AACA;AACA,YAAY,sEAAmB;AAC/B;AACA;AACA,KAAK;;AAEL;AACA;AACA,YAAY,qEAAkB;AAC9B;AACA;AACA,KAAK;;AAEL;AACA;AACA,YAAY,gEAAK;AACjB;AACA,KAAK;;AAEL;AACA;AACA,YAAY,gEAAK;AACjB;AACA,KAAK;;AAEL;AACA;AACA,YAAY,oEAAS;AACrB;AACA,KAAK;;AAEL;AACA;AACA,YAAY,gEAAa;AACzB,KAAK;;AAEL;AACA,UAAU,+DAAY;AACtB;;AAEA;AACA,UAAU,mEAAgB;AAC1B;AACA;;AAEA;AACA,UAAU,iEAAc;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;AC7JD;AAAA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEgC;;;;;;;;ACtBhC;AAAA;AACA,UAAU;AACV,aAAa;;AAEb;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAE4B;;;;;;;;ACzE5B;AAAA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAE+B;;;;;;;;AClB/B;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,8BAA8B,EAAE;AACpE;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,gDAAgD;AAChD,cAAc;AACd,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;AACV;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;AACV;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;AACV;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAE8B;;;;;;;;ACzY9B;AAAA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,8BAA8B,UAAU,GAAG,UAAU;AACrD;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA,GAAG;AACH;;AAE6B;;;;;;;;AC9D7B;AAAA;AAAA;AAAA;AAA8B;AACA;AACJ;AACQ;;AAEnB,oBAAoB,wDAAM;AACzC;AACA,uBAAuB,wDAAM;AAC7B;;AAEA;AACA;AACA;AACA,oBAAoB,wDAAM;AAC1B;AACA;;AAEA;AACA,yBAAyB,0DAAQ;AACjC;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,sDAAI;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AAAA;AAAA;;;;;;;;ACxCD;AAAA;AAA8B;AACA;;AAEf,wBAAwB,wDAAM;AAC7C;AACA,uBAAuB,wDAAM;AAC7B;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACRD;AAAA;AAA8B;AACA;;AAEf,mBAAmB,wDAAM;AACxC;AACA,uBAAuB,wDAAM;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB,cAAc,wDAAM;AACpB;AACA;AACA,OAAO;AACP,qBAAqB,wDAAM;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACvDD;AAAA;AAA8B;AACA;;AAEf,uBAAuB,wDAAM;AAC5C;AACA,uBAAuB,wDAAM;AAC7B;;AAEA;;AAEA;AACA,kBAAkB,wDAAM;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACtCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACA;;AAE9B,qBAAqB,wDAAM;AAC3B;AACA,uBAAuB,wDAAM;AAC7B;AACA;AACA;;AAEA,mBAAmB,wDAAM;AACzB;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;AACA,oBAAoB,wDAAM;AAC1B;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;AACA,oBAAoB,wDAAM;AAC1B;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;;AAEA,uBAAuB,wDAAM;AAC7B;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;;AAEA,yBAAyB,wDAAM;AAC/B;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;;AAEA,0BAA0B,wDAAM;AAChC;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;;AAEA,yBAAyB,wDAAM;AAC/B;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;;AAEA,mBAAmB,wDAAM;AACzB;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;;AAEA,uBAAuB,wDAAM;AAC7B;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;;AAEA,qBAAqB,wDAAM;AAC3B;AACA,uBAAuB,wDAAM;;AAE7B;AACA;AACA;;AAcE;;;;;;;;ACpGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACF;AACQ;AACF;AACF;;AAEM;AACA;;AAEN;AACE;AACF;AACA;;AAErC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iEAAU,CAAC,gEAAQ;AAC3C,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,wBAAwB,gEAAK;AAC7B,wBAAwB,iEAAK;;AAE7B,MAAM,4DAAK;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,gEAAQ;AACd;AACA,cAAc,gEAAK;AACnB,OAAO;;AAEP,MAAM,gEAAQ;AACd;AACA,cAAc,iEAAM;AACpB,OAAO;;AAEP,MAAM,6DAAM;AACZ;AACA,KAAK;AACL;;AAEA;AACA;AACA,MAAM,4DAAK;AACX,MAAM,gEAAS;AACf,MAAM,+DAAQ;AACd,MAAM,8DAAO;;AAEb;AACA,MAAM,6DAAM;;AAEZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"./assets/javascripts/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6fcddf310a7d8b6e8b99","export default class Entity {\r\n  constructor(type, sprite, xPos, yPos, width, height) {\r\n    this.type = type;\r\n    this.sprite = sprite;\r\n    this.xPos = xPos;\r\n    this.yPos = yPos;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/entity.js\n// module id = 0\n// module chunks = 0","export default class Sprite {\r\n  constructor(img, srcX, srcY, srcW, srcH) {\r\n    this.img = img;\r\n    this.srcX = srcX;\r\n    this.srcY = srcY;\r\n    this.srcW = srcW;\r\n    this.srcH = srcH;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/sprite.js\n// module id = 1\n// module chunks = 0","import Entity from './entity';\r\nimport Sprite from './sprite';\r\n\r\nexport default class Goomba extends Entity {\r\n  constructor(img, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(img, 115, 5, 16, 16);\r\n    super('goomba', sprite, xPos, yPos, width, height);\r\n\r\n    const self = this;\r\n    this.squishSound = new Audio('./assets/audio/sounds/stomp.wav');\r\n\r\n    this.spriteAnimations = {\r\n      walking: {\r\n        frames: [\r\n          new Sprite(img, 115, 5, 16, 16),\r\n          new Sprite(img, 131, 5, 16, 16),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      dead: new Sprite(img, 147.5, 5, 16, 16),\r\n    };\r\n\r\n    this.states = {\r\n      walking: {\r\n        movement(data) {\r\n          if (self.direction === 'left') {\r\n            self.xPos -= self.velX;\r\n          } else {\r\n            self.xPos += self.velX;\r\n          }\r\n        },\r\n        animation(data) {\r\n          if (data.animationFrame % 10 === 0) {\r\n            self.sprite = self.spriteAnimations.walking\r\n              .frames[self.spriteAnimations.walking.currentFrame];\r\n\r\n            self.spriteAnimations.walking.currentFrame += 1;\r\n\r\n            if (self.spriteAnimations.walking.currentFrame > 1) {\r\n              self.spriteAnimations.walking.currentFrame = 0;\r\n            }\r\n          }\r\n        },\r\n      },\r\n      dead: {\r\n        movement(data) {\r\n          self.velX = 0;\r\n        },\r\n        animation(data) {\r\n          self.sprite = self.spriteAnimations.dead;\r\n        },\r\n      },\r\n    };\r\n\r\n    this.currentState = this.states.walking;\r\n    this.direction = 'right';\r\n    this.velY = 0;\r\n    this.velX = 0.7;\r\n    this.xPos = xPos;\r\n    this.yPos = yPos;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/goomba.js\n// module id = 2\n// module chunks = 0","import Entity from './entity';\r\nimport Sprite from './sprite';\r\n\r\nexport default class Koopa extends Entity {\r\n  constructor(img, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(img, 253, 29, 16, 24);\r\n    super('koopa', sprite, xPos, yPos, width, height);\r\n\r\n    const self = this;\r\n    this.squishSound = new Audio('./assets/audio/sounds/stomp.wav');\r\n\r\n    this.spriteAnimations = {\r\n      walkRight: {\r\n        frames: [\r\n          new Sprite(img, 253, 29, 16, 24),\r\n          new Sprite(img, 237, 29, 16, 24),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n\r\n      walkLeft: {\r\n        frames: [\r\n          new Sprite(img, 173, 5, 16, 24),\r\n          new Sprite(img, 189, 5, 16, 24),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      hiding: new Sprite(img, 237.5, 14, 16, 15),\r\n    };\r\n\r\n    this.states = {\r\n      walking: {\r\n        movement(data) {\r\n          if (self.direction === 'right') {\r\n            self.xPos += self.velX;\r\n          } else {\r\n            self.xPos -= self.velX;\r\n          }\r\n        },\r\n\r\n        animation(data) {\r\n          if (self.direction === 'right') {\r\n            if (data.animationFrame % 10 === 0) {\r\n              self.sprite = self.spriteAnimations.walkRight\r\n                .frames[self.spriteAnimations.walkRight.currentFrame];\r\n\r\n              self.spriteAnimations.walkRight.currentFrame += 1;\r\n\r\n              if (self.spriteAnimations.walkRight.currentFrame > 1) {\r\n                self.spriteAnimations.walkRight.currentFrame = 0;\r\n              }\r\n            }\r\n          } else {\r\n            if (data.animationFrame % 10 === 0) {\r\n              self.sprite = self.spriteAnimations.walkLeft\r\n                .frames[self.spriteAnimations.walkLeft.currentFrame];\r\n              self.spriteAnimations.walkLeft.currentFrame += 1;\r\n\r\n              if (self.spriteAnimations.walkLeft.currentFrame > 1) {\r\n                self.spriteAnimations.walkLeft.currentFrame = 0;\r\n              }\r\n            }\r\n          }\r\n        },\r\n      },\r\n\r\n      hiding: {\r\n        movement(data) {\r\n          self.width = 16;\r\n          self.height = 17;\r\n          self.velX = 0;\r\n        },\r\n        animation(data) {\r\n          self.sprite = self.spriteAnimations.hiding;\r\n        },\r\n      },\r\n\r\n      sliding: {\r\n        movement(data) {\r\n          self.velX = 3;\r\n          if (self.direction === 'right') {\r\n            self.xPos += self.velX;\r\n          } else {\r\n            self.xPos -= self.velX;\r\n          }\r\n        },\r\n\r\n        animation(data) {\r\n          self.sprite = self.spriteAnimations.hiding;\r\n        },\r\n      },\r\n    };\r\n\r\n    this.currentState = this.states.walking;\r\n    this.direction = 'right';\r\n    this.velY = 0;\r\n    this.velX = 0.5;\r\n    this.xPos = xPos;\r\n    this.yPos = yPos;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/koopa.js\n// module id = 3\n// module chunks = 0","import Entity from './entity';\r\nimport Sprite from './sprite';\r\n\r\nexport default class Mario extends Entity {\r\n  constructor(img, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(img, 651, 5, 16, 16);\r\n    super('mario', sprite, xPos, yPos, width, height);\r\n\r\n    const self = this;\r\n    this.jumpSound = new Audio('./assets/audio/sounds/jump.wav');\r\n    this.deathSound = new Audio('./assets/audio/sounds/mario_death.wav');\r\n    this.bumpSound = new Audio('./assets/audio/sounds/bump.wav');\r\n    this.powerupSound = new Audio('./assets/audio/sounds/powerup.wav');\r\n    this.powerdownSound = new Audio('./assets/audio/sounds/powerdown.wav');\r\n\r\n    this.spriteAnimations = {\r\n      walkRight: {\r\n        frames: [\r\n          new Sprite(img, 667, 5, 16, 16),\r\n          new Sprite(img, 683, 5, 16, 16),\r\n          new Sprite(img, 699, 5, 16, 16),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      walkLeft: {\r\n        frames: [\r\n          new Sprite(img, 844, 21, 16, 16),\r\n          new Sprite(img, 828, 21, 16, 16),\r\n          new Sprite(img, 812, 21, 16, 16),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      bigWalkRight: {\r\n        frames: [\r\n          new Sprite(img, 295, 5, 16, 32),\r\n          new Sprite(img, 311, 5, 16, 32),\r\n          new Sprite(img, 327, 5, 16, 32),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      bigWalkLeft: {\r\n        frames: [\r\n          new Sprite(img, 583, 37, 16, 32),\r\n          new Sprite(img, 567, 37, 16, 32),\r\n          new Sprite(img, 551, 37, 16, 32),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      resizeRight: {\r\n        frames: [\r\n          new Sprite(img, 519, 5, 16, 32),\r\n          new Sprite(img, 279, 5, 16, 32),\r\n          new Sprite(img, 519, 5, 16, 32),\r\n          new Sprite(img, 279, 5, 16, 32),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      resizeLeft: {\r\n        frames: [\r\n          new Sprite(img, 519, 5, 16, 32),\r\n          new Sprite(img, 279, 5, 16, 32),\r\n          new Sprite(img, 519, 5, 16, 32),\r\n          new Sprite(img, 279, 5, 16, 32),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      standRight: new Sprite(img, 651, 5, 16, 16),\r\n      standLeft: new Sprite(img, 860, 21, 16, 16),\r\n      jumpRight: new Sprite(img, 731, 5, 16, 16),\r\n      jumpLeft: new Sprite(img, 778, 22, 16, 16),\r\n\r\n      bigStandRight: new Sprite(img, 278.7, 5, 16, 32),\r\n      bigStandLeft: new Sprite(img, 599.5, 37, 16, 32),\r\n      bigJumpRight: new Sprite(img, 359, 5, 16, 32),\r\n      bigJumpLeft: new Sprite(img, 519, 37, 16, 32),\r\n      dead: new Sprite(img, 748, 5, 16, 16),\r\n    };\r\n\r\n    this.states = {\r\n      jumping: {\r\n        movement(data) {\r\n          if (self.velY === 1.2) {\r\n            const jumpSound = self.jumpSound.cloneNode();\r\n            jumpSound.play();\r\n            self.velY -= 14;\r\n          }\r\n        },\r\n        animation(data) {\r\n          if (self.direction === 'right') {\r\n            self.sprite = self.spriteAnimations.jumpRight;\r\n          } else {\r\n            self.sprite = self.spriteAnimations.jumpLeft;\r\n          }\r\n        },\r\n      },\r\n\r\n      bigJumping: {\r\n        movement(data) {\r\n          if (self.velY === 1.2) {\r\n            self.jumpSound.play();\r\n            self.velY -= 14;\r\n          }\r\n        },\r\n        animation(data) {\r\n          if (self.direction === 'right') {\r\n            self.sprite = self.spriteAnimations.bigJumpRight;\r\n          } else {\r\n            self.sprite = self.spriteAnimations.bigJumpLeft;\r\n          }\r\n        },\r\n      },\r\n\r\n      standing: {\r\n        movement(data) {\r\n\r\n        },\r\n        animation(data) {\r\n          if (self.direction === 'right') {\r\n            self.sprite = self.spriteAnimations.standRight;\r\n          } else {\r\n            self.sprite = self.spriteAnimations.standLeft;\r\n          }\r\n        },\r\n      },\r\n\r\n      bigStanding: {\r\n        movement(data) {\r\n\r\n        },\r\n        animation(data) {\r\n          if (self.direction === 'right') {\r\n            self.sprite = self.spriteAnimations.bigStandRight;\r\n          } else {\r\n            self.sprite = self.spriteAnimations.bigStandLeft;\r\n          }\r\n        },\r\n      },\r\n\r\n      walking: {\r\n        movement(data) {\r\n          if (self.direction === 'right') {\r\n            self.xPos += self.velX;\r\n          } else {\r\n            self.xPos -= self.velX;\r\n          }\r\n        },\r\n\r\n        animation(data) {\r\n          if (self.direction === 'right') {\r\n            if (data.animationFrame % 5 === 0) {\r\n              self.sprite = self.spriteAnimations.walkRight\r\n                .frames[self.spriteAnimations.walkRight.currentFrame];\r\n\r\n              self.spriteAnimations.walkRight.currentFrame += 1;\r\n\r\n              if (self.spriteAnimations.walkRight.currentFrame > 2) {\r\n                self.spriteAnimations.walkRight.currentFrame = 0;\r\n              }\r\n            }\r\n          } else {\r\n            if (data.animationFrame % 5 === 0) {\r\n              self.sprite = self.spriteAnimations.walkLeft\r\n                .frames[self.spriteAnimations.walkLeft.currentFrame];\r\n              self.spriteAnimations.walkLeft.currentFrame += 1;\r\n\r\n              if (self.spriteAnimations.walkLeft.currentFrame > 2) {\r\n                self.spriteAnimations.walkLeft.currentFrame = 0;\r\n              }\r\n            }\r\n          }\r\n        },\r\n      },\r\n\r\n      bigWalking: {\r\n        movement(data) {\r\n          if (self.direction === 'right') {\r\n            self.xPos += self.velX;\r\n          } else {\r\n            self.xPos -= self.velX;\r\n          }\r\n        },\r\n\r\n        animation(data) {\r\n          if (self.direction === 'right') {\r\n            if (data.animationFrame % 5 === 0) {\r\n              self.sprite = self.spriteAnimations.bigWalkRight\r\n                .frames[self.spriteAnimations.bigWalkRight.currentFrame];\r\n\r\n              self.spriteAnimations.bigWalkRight.currentFrame += 1;\r\n\r\n              if (self.spriteAnimations.bigWalkRight.currentFrame > 2) {\r\n                self.spriteAnimations.bigWalkRight.currentFrame = 0;\r\n              }\r\n            }\r\n          } else {\r\n            if (data.animationFrame % 5 === 0) {\r\n              self.sprite = self.spriteAnimations.bigWalkLeft\r\n                .frames[self.spriteAnimations.bigWalkLeft.currentFrame];\r\n              self.spriteAnimations.bigWalkLeft.currentFrame += 1;\r\n\r\n              if (self.spriteAnimations.bigWalkLeft.currentFrame > 2) {\r\n                self.spriteAnimations.bigWalkLeft.currentFrame = 0;\r\n              }\r\n            }\r\n          }\r\n        },\r\n      },\r\n\r\n      resizing: {\r\n        movement(data) {\r\n\r\n        },\r\n        animation(data) {\r\n          if (self.direction === 'right') {\r\n            if (data.animationFrame % 5 === 0) {\r\n              self.sprite = self.spriteAnimations.resizeRight\r\n                .frames[self.spriteAnimations.resizeRight.currentFrame];\r\n\r\n              self.spriteAnimations.resizeRight.currentFrame += 1;\r\n\r\n              if (self.spriteAnimations.resizeRight.currentFrame > 3) {\r\n                self.spriteAnimations.resizeRight.currentFrame = 0;\r\n              }\r\n            }\r\n          } else {\r\n            if (data.animationFrame % 5 === 0) {\r\n              self.sprite = self.spriteAnimations.resizeLeft\r\n                .frames[self.spriteAnimations.resizeLeft.currentFrame];\r\n              self.spriteAnimations.resizeLeft.currentFrame += 1;\r\n\r\n              if (self.spriteAnimations.resizeLeft.currentFrame > 3) {\r\n                self.spriteAnimations.resizeLeft.currentFrame = 0;\r\n              }\r\n            }\r\n          }\r\n        },\r\n      },\r\n\r\n      dead: {\r\n        movement(data) {\r\n          self.velX = 0;\r\n        },\r\n\r\n        animation(data) {\r\n          self.sprite = self.spriteAnimations.dead;\r\n        },\r\n      },\r\n    };\r\n\r\n    this.currentState = this.states.standing;\r\n    this.direction = 'right';\r\n    this.bigMario = false;\r\n    this.velY = 0;\r\n    this.velX = 3.8;\r\n    this.xPos = xPos;\r\n    this.yPos = yPos;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/mario.js\n// module id = 4\n// module chunks = 0","export default class Score {\r\n  constructor(xPos, yPos) {\r\n    this.value = 0;\r\n    this.coinCount = 0;\r\n    this.xPos = xPos;\r\n    this.yPos = yPos;\r\n    this.size = '12px';\r\n    this.font = 'PixelEmulator';\r\n    this.color = 'white';\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/score.js\n// module id = 5\n// module chunks = 0","export const levelOne = {\r\n\r\n  flag: [3185, 24, 16, 24],\r\n  flagpole: [3185, 48, 16, 135],\r\n  castle: [3263, 112, 80, 80],\r\n\r\n  blocks: [\r\n    [256, 128, 16, 16], [352, 64, 16, 16], [368, 128, 16, 16],\r\n    [1264, 128, 16, 16], [1520, 64, 16, 16], [1712, 128, 16, 16],\r\n    [1760, 128, 16, 16], [1808, 128, 16, 16], [2080, 64, 16, 16],\r\n    [2096, 64, 16, 16], [2736, 128, 16, 16],\r\n  ],\r\n\r\n  goombas: [\r\n    [512, 176, 16, 16],\r\n    [672, 176, 16, 16],\r\n    [832, 176, 16, 16],\r\n    [2768, 176, 16, 16],\r\n    [560, 176, 16, 16],\r\n    [1920, 176, 16, 16],\r\n  ],\r\n\r\n  koopas: [\r\n    [400, 176, 16, 24],\r\n    [864, 176, 16, 24],\r\n    [2352, 176, 16, 24],\r\n  ],\r\n\r\n  smallClouds: [\r\n    [311, 16, 32, 24],\r\n    [903, 32, 32, 24],\r\n    [1080, 16, 32, 24],\r\n    [1687, 32, 32, 24],\r\n    [1863, 16, 32, 24],\r\n    [2455, 32, 32, 24],\r\n    [2631, 16, 32, 24],\r\n    [3223, 32, 32, 24],\r\n  ],\r\n\r\n  mediumClouds: [\r\n    [584, 16, 48, 24],\r\n    [1368, 16, 48, 24],\r\n    [2135, 16, 48, 24],\r\n    [2904, 16, 48, 24],\r\n  ],\r\n\r\n  largeClouds: [\r\n    [440, 32, 64, 24],\r\n    [1224, 32, 64, 24],\r\n    [1992, 32, 64, 24],\r\n    [2759, 32, 64, 24],\r\n  ],\r\n\r\n  ground: [\r\n    [-16, 0, 16, 200], [0, 192, 16, 16], [16, 192, 16, 16], [32, 192, 16, 16],\r\n    [48, 192, 16, 16], [64, 192, 16, 16], [80, 192, 16, 16], [96, 192, 16, 16],\r\n    [112, 192, 16, 16], [128, 192, 16, 16], [144, 192, 16, 16],\r\n    [160, 192, 16, 16], [176, 192, 16, 16], [192, 192, 16, 16],\r\n    [208, 192, 16, 16], [224, 192, 16, 16], [240, 192, 16, 16],\r\n    [256, 192, 16, 16], [272, 192, 16, 16], [288, 192, 16, 16],\r\n    [304, 192, 16, 16], [320, 192, 16, 16], [336, 192, 16, 16],\r\n    [352, 192, 16, 16], [368, 192, 16, 16], [384, 192, 16, 16],\r\n    [400, 192, 16, 16], [416, 192, 16, 16], [432, 192, 16, 16],\r\n    [448, 192, 16, 16],\r\n    [464, 192, 16, 16],\r\n    [480, 192, 16, 16],\r\n    [496, 192, 16, 16],\r\n    [512, 192, 16, 16],\r\n    [528, 192, 16, 16],\r\n    [544, 192, 16, 16],\r\n    [560, 192, 16, 16],\r\n    [576, 192, 16, 16],\r\n    [592, 192, 16, 16],\r\n    [608, 192, 16, 16],\r\n    [624, 192, 16, 16],\r\n    [640, 192, 16, 16],\r\n    [656, 192, 16, 16],\r\n    [672, 192, 16, 16],\r\n    [688, 192, 16, 16],\r\n    [704, 192, 16, 16],\r\n    [720, 192, 16, 16],\r\n    [736, 192, 16, 16],\r\n    [752, 192, 16, 16],\r\n    [768, 192, 16, 16],\r\n    [784, 192, 16, 16],\r\n    [800, 192, 16, 16],\r\n    [816, 192, 16, 16],\r\n    [832, 192, 16, 16],\r\n    [848, 192, 16, 16],\r\n    [864, 192, 16, 16],\r\n    [880, 192, 16, 16],\r\n    [896, 192, 16, 16],\r\n    [912, 192, 16, 16],\r\n    [928, 192, 16, 16],\r\n    [944, 192, 16, 16],\r\n    [960, 192, 16, 16],\r\n    [976, 192, 16, 16],\r\n    [992, 192, 16, 16],\r\n    [1008, 192, 16, 16],\r\n    [1024, 192, 16, 16],\r\n    [1040, 192, 16, 16],\r\n    [1056, 192, 16, 16],\r\n    [1072, 192, 16, 16],\r\n    [1088, 192, 16, 16],\r\n    [1136, 192, 16, 16],\r\n    [1152, 192, 16, 16],\r\n    [1168, 192, 16, 16],\r\n    [1184, 192, 16, 16],\r\n    [1200, 192, 16, 16],\r\n    [1216, 192, 16, 16],\r\n    [1232, 192, 16, 16],\r\n    [1248, 192, 16, 16],\r\n    [1264, 192, 16, 16],\r\n    [1280, 192, 16, 16],\r\n    [1296, 192, 16, 16],\r\n    [1312, 192, 16, 16],\r\n    [1328, 192, 16, 16],\r\n    [1344, 192, 16, 16],\r\n    [1360, 192, 16, 16],\r\n    [1376, 192, 16, 16],\r\n    [1392, 192, 16, 16],\r\n    [1440, 192, 16, 16],\r\n    [1456, 192, 16, 16],\r\n    [1472, 192, 16, 16],\r\n    [1488, 192, 16, 16],\r\n    [1504, 192, 16, 16],\r\n    [1520, 192, 16, 16],\r\n    [1536, 192, 16, 16],\r\n    [1552, 192, 16, 16],\r\n    [1568, 192, 16, 16],\r\n    [1584, 192, 16, 16],\r\n    [1600, 192, 16, 16],\r\n    [1616, 192, 16, 16],\r\n    [1632, 192, 16, 16],\r\n    [1648, 192, 16, 16],\r\n    [1664, 192, 16, 16],\r\n    [1680, 192, 16, 16],\r\n    [1696, 192, 16, 16],\r\n    [1712, 192, 16, 16],\r\n    [1728, 192, 16, 16],\r\n    [1744, 192, 16, 16],\r\n    [1760, 192, 16, 16],\r\n    [1776, 192, 16, 16],\r\n    [1792, 192, 16, 16],\r\n    [1808, 192, 16, 16],\r\n    [1824, 192, 16, 16],\r\n    [1840, 192, 16, 16],\r\n    [1856, 192, 16, 16],\r\n    [1872, 192, 16, 16],\r\n    [1888, 192, 16, 16],\r\n    [1904, 192, 16, 16],\r\n    [1920, 192, 16, 16],\r\n    [1936, 192, 16, 16],\r\n    [1952, 192, 16, 16],\r\n    [1968, 192, 16, 16],\r\n    [1984, 192, 16, 16],\r\n    [2000, 192, 16, 16],\r\n    [2016, 192, 16, 16],\r\n    [2032, 192, 16, 16],\r\n    [2048, 192, 16, 16],\r\n    [2064, 192, 16, 16],\r\n    [2080, 192, 16, 16],\r\n    [2096, 192, 16, 16],\r\n    [2112, 192, 16, 16],\r\n    [2128, 192, 16, 16],\r\n    [2144, 192, 16, 16],\r\n    [2160, 192, 16, 16],\r\n    [2176, 192, 16, 16],\r\n    [2192, 192, 16, 16],\r\n    [2208, 192, 16, 16],\r\n    [2224, 192, 16, 16],\r\n    [2240, 192, 16, 16],\r\n    [2256, 192, 16, 16],\r\n    [2272, 192, 16, 16],\r\n    [2288, 192, 16, 16],\r\n    [2304, 192, 16, 16],\r\n    [2320, 192, 16, 16],\r\n    [2336, 192, 16, 16],\r\n    [2352, 192, 16, 16],\r\n    [2368, 192, 16, 16],\r\n    [2384, 192, 16, 16],\r\n    [2400, 192, 16, 16],\r\n    [2416, 192, 16, 16],\r\n    [2432, 192, 16, 16],\r\n    [2448, 192, 16, 16],\r\n    [2496, 192, 16, 16],\r\n    [2512, 192, 16, 16],\r\n    [2528, 192, 16, 16],\r\n    [2544, 192, 16, 16],\r\n    [2560, 192, 16, 16],\r\n    [2576, 192, 16, 16],\r\n    [2592, 192, 16, 16],\r\n    [2608, 192, 16, 16],\r\n    [2624, 192, 16, 16],\r\n    [2640, 192, 16, 16],\r\n    [2656, 192, 16, 16],\r\n    [2672, 192, 16, 16],\r\n    [2688, 192, 16, 16],\r\n    [2704, 192, 16, 16],\r\n    [2720, 192, 16, 16],\r\n    [2736, 192, 16, 16],\r\n    [2752, 192, 16, 16],\r\n    [2768, 192, 16, 16],\r\n    [2784, 192, 16, 16],\r\n    [2800, 192, 16, 16],\r\n    [2816, 192, 16, 16],\r\n    [2832, 192, 16, 16],\r\n    [2848, 192, 16, 16],\r\n    [2864, 192, 16, 16],\r\n    [2880, 192, 16, 16],\r\n    [2896, 192, 16, 16],\r\n    [2912, 192, 16, 16],\r\n    [2928, 192, 16, 16],\r\n    [2944, 192, 16, 16],\r\n    [2960, 192, 16, 16],\r\n    [2976, 192, 16, 16],\r\n    [2992, 192, 16, 16],\r\n    [3008, 192, 16, 16],\r\n    [3024, 192, 16, 16],\r\n    [3040, 192, 16, 16],\r\n    [3056, 192, 16, 16],\r\n    [3072, 192, 16, 16],\r\n    [3088, 192, 16, 16],\r\n    [3104, 192, 16, 16],\r\n    [3120, 192, 16, 16],\r\n    [3136, 192, 16, 16],\r\n    [3152, 192, 16, 16],\r\n    [3168, 192, 16, 16],\r\n    [3184, 192, 16, 16],\r\n    [3200, 192, 16, 16],\r\n    [3216, 192, 16, 16],\r\n    [3232, 192, 16, 16],\r\n    [3248, 192, 16, 16],\r\n    [3264, 192, 16, 16],\r\n    [3280, 192, 16, 16],\r\n    [3296, 192, 16, 16],\r\n    [3312, 192, 16, 16],\r\n    [3328, 192, 16, 16],\r\n    [3344, 192, 16, 16],\r\n    [3360, 192, 16, 16],\r\n    [3376, 192, 16, 16],\r\n    [3392, 192, 16, 16],\r\n    [3408, 192, 16, 16],\r\n    [3424, 192, 16, 16],\r\n    [3440, 192, 16, 16],\r\n    [3456, 192, 16, 16],\r\n    [3472, 192, 16, 16],\r\n    [3488, 192, 16, 16],\r\n    [3504, 192, 16, 16],\r\n    [3520, 192, 16, 16],\r\n    [3536, 192, 16, 16],\r\n    [3552, 192, 16, 16],\r\n    [3568, 192, 16, 16],\r\n    [3584, 192, 16, 16],\r\n    [3600, 192, 16, 16],\r\n    [3616, 192, 16, 16],\r\n    [3632, 192, 16, 16],\r\n    [3648, 192, 16, 16],\r\n    [3664, 192, 16, 16],\r\n    [3680, 192, 16, 16],\r\n    [3696, 192, 16, 16],\r\n    [3712, 192, 16, 16],\r\n    [3728, 192, 16, 16],\r\n    [3744, 192, 16, 16],\r\n    [3760, 192, 16, 16],\r\n    [3776, 192, 16, 16], [3792, 192, 16, 16],\r\n    [3808, 192, 16, 16], [3824, 192, 16, 16],\r\n    [3840, 192, 16, 16], [2208, 128, 16, 64], [2192, 144, 16, 48], [2176, 160, 16, 32],\r\n    [2256, 128, 16, 64], [2272, 144, 16, 48],\r\n    [2288, 160, 16, 32], [2304, 176, 16, 16], [2384, 176, 16, 16],\r\n    [2400, 160, 16, 32], [2416, 144, 16, 48], [2432, 128, 32, 64],\r\n    [2496, 128, 16, 64], [2512, 144, 16, 48], [2528, 160, 16, 32],\r\n    [2544, 176, 16, 16], [3024, 64, 32, 128],\r\n    [46, 3024, 80, 96], [3008, 80, 16, 112], [2992, 96, 16, 96],\r\n    [2976, 112, 16, 80], [2960, 128, 16, 64], [2944, 144, 16, 48],\r\n    [2928, 160, 16, 32], [2912, 176, 16, 16],\r\n  ],\r\n\r\n  bricks: [\r\n    [2160, 176, 16, 16], [2176, 160, 16, 16], [2176, 176, 16, 16],\r\n    [2192, 144, 16, 16], [2192, 160, 16, 16], [2192, 176, 16, 16],\r\n    [2208, 128, 16, 16], [2208, 144, 16, 16], [2208, 160, 16, 16],\r\n    [2208, 176, 16, 16], [2256, 128, 16, 16], [2256, 144, 16, 16],\r\n    [2256, 160, 16, 16], [2256, 176, 16, 16], [2272, 144, 16, 16],\r\n    [2272, 160, 16, 16], [2272, 176, 16, 16], [2288, 160, 16, 16],\r\n    [2288, 176, 16, 16], [2304, 176, 16, 16], [3184, 176, 16, 16],\r\n\r\n    [2384, 176, 16, 16],\r\n    [2400, 160, 16, 16], [2400, 176, 16, 16],\r\n    [2416, 144, 16, 16], [2416, 160, 16, 16], [2416, 176, 16, 16],\r\n    [2432, 128, 16, 16], [2432, 144, 16, 16], [2432, 160, 16, 16], [2432, 176, 16, 16],\r\n    [2448, 128, 16, 16], [2448, 144, 16, 16], [2448, 160, 16, 16], [2448, 176, 16, 16],\r\n\r\n    [2496, 128, 16, 16], [2496, 144, 16, 16], [2496, 160, 16, 16], [2496, 176, 16, 16],\r\n    [2512, 144, 16, 16], [2512, 160, 16, 16], [2512, 176, 16, 16],\r\n    [2528, 160, 16, 16], [2528, 176, 16, 16],\r\n    [2544, 176, 16, 16],\r\n\r\n    [2912, 176, 16, 16],\r\n    [2928, 160, 16, 16], [2928, 176, 16, 16],\r\n    [2944, 144, 16, 16], [2944, 160, 16, 16], [2944, 176, 16, 16],\r\n    [2960, 128, 16, 16], [2960, 144, 16, 16], [2960, 160, 16, 16], [2960, 176, 16, 16],\r\n    [2976, 112, 16, 16], [2976, 128, 16, 16], [2976, 144, 16, 16], [2976, 160, 16, 16], [2976, 176, 16, 16],\r\n    [2992, 96, 16, 16], [2992, 112, 16, 16], [2992, 128, 16, 16], [2992, 144, 16, 16], [2992, 160, 16, 16], [2992, 176, 16, 16],\r\n    [3008, 80, 16, 16], [3008, 96, 16, 16], [3008, 112, 16, 16], [3008, 128, 16, 16], [3008, 144, 16, 16], [3008, 160, 16, 16], [3008, 176, 16, 16],\r\n    [3024, 64, 16, 16], [3024, 80, 16, 16], [3024, 96, 16, 16], [3024, 112, 16, 16], [3024, 128, 16, 16], [3024, 144, 16, 16], [3024, 160, 16, 16], [3024, 176, 16, 16],\r\n    [3040, 64, 16, 16], [3040, 80, 16, 16], [3040, 96, 16, 16], [3040, 112, 16, 16], [3040, 128, 16, 16], [3040, 144, 16, 16], [3040, 160, 16, 16], [3040, 176, 16, 16],\r\n  ],\r\n\r\n  shrubs: [\r\n    [183, 176, 54, 16],\r\n    [375, 176, 32, 16],\r\n    [663, 176, 32, 16],\r\n    [951, 176, 32, 16],\r\n    [1143, 176, 32, 16],\r\n    [1447, 176, 32, 16],\r\n    [1735, 176, 32, 16],\r\n    [1927, 176, 32, 16],\r\n    [2224, 176, 32, 16],\r\n    [2695, 176, 32, 16],\r\n  ],\r\n\r\n  mountains: [\r\n    [255, 172, 48, 19],\r\n    [767, 157, 80, 35],\r\n    [1023, 172, 49, 20],\r\n    [1551, 157, 82, 35],\r\n    [1807, 172, 50, 20],\r\n    [2320, 157, 80, 35],\r\n    [2575, 172, 50, 20],\r\n    [3087, 157, 81, 35],\r\n    [3359, 157, 81, 35],\r\n  ],\r\n\r\n  pipes: [\r\n    [3568, 128, 32, 64], [3536, 160, 32, 32], [2880, 160, 32, 32],\r\n    [2624, 160, 32, 32], [448, 160, 32, 32], [608, 144, 32, 48],\r\n    [736, 128, 32, 64], [912, 128, 32, 64],\r\n  ],\r\n\r\n  coins: [\r\n    [256, 128, 16, 16], [336, 128, 16, 16],\r\n  ],\r\n\r\n  mushrooms: [\r\n    [336, 128, 16, 16], [1760, 64, 16, 16],\r\n  ],\r\n\r\n  breakables: [\r\n    [384, 128, 16, 16], [352, 128, 16, 16], [320, 128, 16, 16], [2752, 128, 16, 16],\r\n    [2720, 128, 16, 16], [2704, 128, 16, 16], [2096, 128, 16, 16], [2080, 128, 16, 16],\r\n    [2064, 64, 16, 16], [2112, 64, 16, 16], [1952, 64, 16, 16], [1968, 64, 16, 16],\r\n    [1984, 64, 16, 16], [1632, 128, 16, 16], [1616, 128, 16, 16], [1504, 64, 16, 16],\r\n    [1488, 64, 16, 16], [1472, 64, 16, 16], [1520, 128, 16, 16], [1408, 64, 16, 16],\r\n    [1392, 64, 16, 16], [1376, 64, 16, 16], [1360, 64, 16, 16], [1344, 64, 16, 16],\r\n    [1328, 64, 16, 16], [1312, 64, 16, 16], [1296, 64, 16, 16], [1280, 128, 16, 16],\r\n    [1248, 128, 16, 16], [1904, 128, 16, 16],\r\n  ],\r\n};\r\n\r\nexport { levelOne as default };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/map/level_1-1.js\n// module id = 6\n// module chunks = 0","import * as Scenery from '../entities/scenery';\r\nimport Block from '../entities/block';\r\nimport Breakable from '../entities/breakable';\r\n\r\nexport default class MapBuilder {\r\n  constructor(level, tileset, spriteSheet) {\r\n    this.level = level;\r\n    this.tileset = tileset;\r\n    this.spriteSheet = spriteSheet;\r\n\r\n    this.mountainSheet = new Image();\r\n    this.mountainSheet.src = './assets/sprites/mountain.png';\r\n    this.cloudsSheet = new Image();\r\n    this.cloudsSheet.src = './assets/sprites/clouds.png';\r\n    this.castleSheet = new Image();\r\n    this.castleSheet.src = './assets/sprites/castle.png';\r\n\r\n    this.sceneryEntities = [];\r\n    this.brickEntities = [];\r\n    this.breakableEntities = [];\r\n    this.blockEntities = [];\r\n\r\n    // Create all entities in the map\r\n    level.ground.forEach((ground) => {\r\n      this.sceneryEntities.push(\r\n        new Scenery.Ground(this.tileset, ground[0], ground[1], ground[2], ground[3]),\r\n      );\r\n    });\r\n\r\n    level.shrubs.forEach((shrub) => {\r\n      this.sceneryEntities.push(\r\n        new Scenery.Shrub(this.tileset, shrub[0], shrub[1], shrub[2], shrub[3]),\r\n      );\r\n    });\r\n\r\n    level.mountains.forEach((mountain) => {\r\n      this.sceneryEntities.push(\r\n        new Scenery.Mountain(\r\n          this.mountainSheet, mountain[0], mountain[1], mountain[2], mountain[3]),\r\n      );\r\n    });\r\n\r\n    level.pipes.forEach((pipe) => {\r\n      this.sceneryEntities.push(\r\n        new Scenery.Pipe(this.tileset, pipe[0], pipe[1], pipe[2], pipe[3]),\r\n      );\r\n    });\r\n\r\n    level.smallClouds.forEach((smallCloud) => {\r\n      this.sceneryEntities.push(\r\n        new Scenery.SmallCloud(\r\n          this.cloudsSheet, smallCloud[0], smallCloud[1], smallCloud[2], smallCloud[3],\r\n      ));\r\n    });\r\n\r\n    level.mediumClouds.forEach((mediumCloud) => {\r\n      this.sceneryEntities.push(\r\n        new Scenery.MediumCloud(\r\n          this.cloudsSheet, mediumCloud[0], mediumCloud[1], mediumCloud[2], mediumCloud[3],\r\n      ));\r\n    });\r\n\r\n    level.largeClouds.forEach((largeCloud) => {\r\n      this.sceneryEntities.push(\r\n        new Scenery.LargeCloud(\r\n          this.cloudsSheet, largeCloud[0], largeCloud[1], largeCloud[2], largeCloud[3],\r\n      ));\r\n    });\r\n\r\n    level.blocks.forEach((block) => {\r\n      this.blockEntities.push(\r\n        new Block('coin', this.tileset, block[0], block[1], block[2], block[3]),\r\n      );\r\n    });\r\n\r\n    level.mushrooms.forEach((block) => {\r\n      this.blockEntities.push(\r\n        new Block('mushroom', this.tileset, block[0], block[1], block[2], block[3]),\r\n      );\r\n    });\r\n\r\n    level.breakables.forEach((breakable) => {\r\n      this.breakableEntities.push(\r\n        new Breakable(this.tileset, breakable[0], breakable[1], breakable[2], breakable[3]),\r\n      );\r\n    });\r\n\r\n    level.bricks.forEach((brick) => {\r\n      this.sceneryEntities.push(\r\n        new Scenery.Brick(this.tileset, brick[0], brick[1], brick[2], brick[3]));\r\n    });\r\n\r\n    this.sceneryEntities.push(\r\n      new Scenery.Flag(this.tileset, level.flag[0], level.flag[1], level.flag[2], level.flag[3]),\r\n    );\r\n\r\n    this.sceneryEntities.push(\r\n      new Scenery.Flagpole(\r\n        this.tileset, level.flagpole[0], level.flagpole[1], level.flagpole[2], level.flagpole[3]),\r\n    );\r\n\r\n    this.sceneryEntities.push(\r\n      new Scenery.Castle(\r\n        this.castleSheet, level.castle[0], level.castle[1], level.castle[2], level.castle[3]),\r\n    );\r\n  }\r\n\r\n  create(data) {\r\n    this.sceneryEntities.forEach((scene) => {\r\n      data.entities.scenery.push(scene);\r\n    });\r\n\r\n    this.breakableEntities.forEach((breakable) => {\r\n      data.entities.scenery.push(breakable);\r\n    });\r\n\r\n    this.blockEntities.forEach((block) => {\r\n      data.entities.scenery.push(block);\r\n    });\r\n  }\r\n\r\n  renderMap(data) {\r\n    this.sceneryEntities.forEach((scene) => {\r\n      this.drawEntity(scene, data);\r\n    });\r\n\r\n    this.brickEntities.forEach((brick) => {\r\n      this.drawEntity(brick, data);\r\n    });\r\n\r\n    this.breakableEntities.forEach((breakable) => {\r\n      this.drawEntity(breakable, data);\r\n    });\r\n\r\n    this.blockEntities.forEach((block) => {\r\n      this.drawEntity(block, data);\r\n    });\r\n  }\r\n\r\n  // Only draw entity when in Viewport\r\n  drawEntity(entity, data) {\r\n    const ctx = data.canvas.ctx;\r\n    const viewport = data.viewport;\r\n\r\n    if (((entity.xPos + entity.width >= viewport.vX &&\r\n      entity.xPos + entity.width <= viewport.vX + viewport.width)) &&\r\n      ((entity.yPos + entity.height >= viewport.vY &&\r\n        entity.yPos + entity.height <= viewport.vY + viewport.height))) {\r\n      ctx.drawImage(\r\n        entity.sprite.img,\r\n        entity.sprite.srcX, entity.sprite.srcY,\r\n        entity.sprite.srcW, entity.sprite.srcH,\r\n        entity.xPos - viewport.vX, entity.yPos - viewport.vY,\r\n        entity.width, entity.height,\r\n      );\r\n    }\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/map/map_builder.js\n// module id = 7\n// module chunks = 0","const animation = {\r\n  update(data) {\r\n    data.entities.mario.currentState.animation(data);\r\n\r\n    data.entities.coins.forEach((coin) => {\r\n      coin.currentState.animation(data);\r\n    });\r\n\r\n    data.entities.mushrooms.forEach((mushroom) => {\r\n      mushroom.currentState.animation(data);\r\n    });\r\n\r\n    data.entities.goombas.forEach((goomba) => {\r\n      goomba.currentState.animation(data);\r\n    });\r\n\r\n    data.entities.koopas.forEach((koopa) => {\r\n      koopa.currentState.animation(data);\r\n    });\r\n  },\r\n};\r\n\r\nexport { animation as default };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util/animation.js\n// module id = 8\n// module chunks = 0","const input = {\r\n  down: {},\r\n  pressed: {},\r\n\r\n  init() {\r\n    $(window).on('keydown', (event) => {\r\n      this.down[event.keyCode] = true;\r\n    });\r\n\r\n    $(window).on('keyup', () => {\r\n      delete this.down[event.keyCode];\r\n      delete this.pressed[event.keyCode];\r\n    });\r\n  },\r\n\r\n  update(data) {\r\n    const mario = data.entities.mario;\r\n\r\n    if (data.userControl) {\r\n      // Move Left. Left-Arrow or A\r\n      if (this.isDown(37) || this.isDown(65)) {\r\n        if (mario.velY === 1.2) {\r\n          if (mario.bigMario) {\r\n            mario.currentState = mario.states.bigWalking;\r\n          } else {\r\n            mario.currentState = mario.states.walking;\r\n          }\r\n        } else {\r\n          mario.xPos -= mario.velX;\r\n        }\r\n        mario.direction = 'left';\r\n      }\r\n      // Move Right. Right-Arrow or D\r\n      if (this.isDown(39) || this.isDown(68)) {\r\n        if (mario.velY === 1.2) {\r\n          if (mario.bigMario) {\r\n            mario.currentState = mario.states.bigWalking;\r\n          } else {\r\n            mario.currentState = mario.states.walking;\r\n          }\r\n        } else {\r\n          mario.xPos += mario.velX;\r\n        }\r\n        mario.direction = 'right';\r\n      }\r\n\r\n      // Jump. Up-Arrow, W, or Spacebar\r\n      if (this.isPressed(38) || this.isPressed(32) || this.isPressed(87)) {\r\n        if (mario.bigMario) {\r\n          mario.currentState = mario.states.bigJumping;\r\n        } else {\r\n          mario.currentState = mario.states.jumping;\r\n        }\r\n      }\r\n    } else {\r\n      mario.currentState = mario.states.dead;\r\n    }\r\n  },\r\n\r\n  isDown(code) {\r\n    return this.down[code];\r\n  },\r\n\r\n  isPressed(code) {\r\n    if (this.pressed[code]) {\r\n      return false;\r\n    } else if (this.down[code]) {\r\n      this.pressed[code] = true;\r\n      return this.pressed[code];\r\n    }\r\n  },\r\n};\r\n\r\nexport { input as default };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util/input.js\n// module id = 9\n// module chunks = 0","const movement = {\r\n  update(data) {\r\n    data.entities.mario.currentState.movement(data);\r\n\r\n    data.entities.mushrooms.forEach((mushroom) => {\r\n      mushroom.currentState.movement(data);\r\n    });\r\n\r\n    data.entities.goombas.forEach((goomba) => {\r\n      goomba.currentState.movement(data);\r\n    });\r\n\r\n    data.entities.koopas.forEach((goomba) => {\r\n      goomba.currentState.movement(data);\r\n    });\r\n  },\r\n};\r\n\r\nexport { movement as default };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util/movement.js\n// module id = 10\n// module chunks = 0","const physics = {\r\n  update(data) {\r\n    // detect entity collisions\r\n    this.collisionDetection(data);\r\n    this.sceneryCollisionDetection(data);\r\n    this.marioFallingCheck(data);\r\n\r\n    // apply gravity to all entities\r\n    this.gravity(data.entities.mario);\r\n\r\n    data.entities.mushrooms.forEach((mushroom) => {\r\n      this.gravity(mushroom);\r\n    });\r\n\r\n    data.entities.goombas.forEach((goomba) => {\r\n      this.gravity(goomba);\r\n    });\r\n\r\n    data.entities.koopas.forEach((koopa) => {\r\n      this.gravity(koopa);\r\n    });\r\n  },\r\n\r\n  collisionDetection(data) {\r\n    const collidables = [\r\n      data.entities.coins,\r\n      data.entities.mushrooms,\r\n      data.entities.goombas,\r\n      data.entities.koopas,\r\n    ];\r\n\r\n    const entityCollisionCheck = (entity) => {\r\n      if (data.entities.mario.xPos < entity.xPos + entity.width &&\r\n        data.entities.mario.xPos + data.entities.mario.width > entity.xPos &&\r\n        data.entities.mario.yPos < entity.yPos + entity.height &&\r\n        data.entities.mario.height + data.entities.mario.yPos > entity.yPos) {\r\n        // Collision Occured\r\n        this.handleCollision(data, entity);\r\n      }\r\n    };\r\n\r\n    collidables.forEach(entities =>\r\n      entities.forEach((entity) => { entityCollisionCheck(entity); }),\r\n    );\r\n    // this.enemyCollisions(data);\r\n  },\r\n\r\n  // enemyCollisions(data) {\r\n  //   const goombas = data.entities.goombas;\r\n  //   const koopas = data.entities.koopas;\r\n  //\r\n  //   const checkCollisions = (entityOne, entityTwo) => {\r\n  //     if ((entityOne.xPos < entityTwo.xPos && entityOne.yPos >= entityTwo.yPos) ||\r\n  //         (entityOne.xPos > entityTwo.xPos && entityOne.yPos >= entityTwo.yPos)) {\r\n  //           console.log('collision');\r\n  //       // E1 Sliding Koopa\r\n  //       if (entityOne.type === 'koopa' && entityOne.currentState === entityOne.states.sliding) {\r\n  //         if (entityTwo.type === 'koopa' && entityOne.currentState === entityOne.states.sliding) {\r\n  //           this.koopaDeath(entityOne, data);\r\n  //           this.koopaDeath(entityTwo, data);\r\n  //         } else {\r\n  //           this.enemyDeath(entityTwo, data); // write single method for both\r\n  //         } // E2 Sliding Koopa\r\n  //       } else if (entityTwo.type === 'koopa' && entityTwo.currentState === entityTwo.states.sliding) {\r\n  //         this.enemyDeath(entityOne, data);\r\n  //       } else {\r\n  //         entityOne.direction = entityOne.direction === 'left' ? 'right' : 'left';\r\n  //         entityTwo.direction = entityTwo.direction === 'left' ? 'right' : 'left';\r\n  //       }\r\n  //     }\r\n  //\r\n  //     goombas.forEach(goomba => {\r\n  //       koopas.forEach(koopa => {\r\n  //         checkCollisions(goomba, koopa);\r\n  //       });\r\n  //     });\r\n  //\r\n  //     goombas.forEach(goombaOne => {\r\n  //       goombas.forEach(goombaTwo => {\r\n  //         checkCollisions(goombaOne, goombaTwo);\r\n  //       });\r\n  //     });\r\n  //\r\n  //     koopas.forEach(koopaOne => {\r\n  //       koopas.forEach(koopaTwo => {\r\n  //         checkCollisions(koopaOne, koopaTwo);\r\n  //       });\r\n  //     });\r\n  //   };\r\n  // },\r\n\r\n  handleCollision(data, entity) {\r\n    const mario = data.entities.mario;\r\n\r\n    if ((entity.type === 'goomba' ||\r\n      entity.type === 'koopa') &&\r\n      mario.type !== 'invincible') {\r\n      // mario's right\r\n      if (mario.xPos < entity.xPos && mario.velY <= entity.velY) {\r\n        mario.xPos = entity.xPos - mario.width;\r\n        // slide shell instead of death\r\n        if (entity.type === 'koopa' &&\r\n          entity.currentState === entity.states.hiding) {\r\n          entity.direction = 'right';\r\n          entity.xPos += 5;\r\n\r\n          setTimeout(() => {\r\n            entity.currentState = entity.states.sliding;\r\n          }, 50);\r\n        } else {\r\n          if (mario.bigMario) {\r\n            this.marioShrink(mario);\r\n          } else {\r\n            mario.currentState = mario.states.dead;\r\n            this.marioDeath(data);\r\n          }\r\n        }\r\n      }\r\n      // mario's left\r\n      if (mario.xPos > entity.xPos && mario.velY <= entity.velY) {\r\n        mario.xPos = entity.xPos + mario.width;\r\n\r\n        if (entity.type === 'koopa' &&\r\n          entity.currentState === entity.states.hiding) {\r\n          entity.direction = 'left';\r\n          entity.xPos -= 5;\r\n\r\n          setTimeout(() => {\r\n            entity.currentState = entity.states.sliding;\r\n          }, 50);\r\n        } else {\r\n          if (mario.bigMario) {\r\n            this.marioShrink(mario);\r\n          } else {\r\n            mario.currentState = mario.states.dead;\r\n            this.marioDeath(data);\r\n          }\r\n        }\r\n      }\r\n      //  Mario bot\r\n      if (mario.yPos < entity.yPos &&\r\n        (mario.xPos + mario.width) > entity.xPos &&\r\n        mario.xPos < (entity.xPos + entity.width) &&\r\n        mario.velY >= entity.velY) {\r\n        mario.currentState = mario.states.standing;\r\n        mario.yPos = entity.yPos - mario.height;\r\n        mario.velY = 0;\r\n\r\n        if (entity.type === 'goomba') {\r\n          this.enemyDeath(entity, data);\r\n        } else if (entity.type === 'koopa') {\r\n          if (entity.currentState === entity.states.hiding) {\r\n            this.koopaSlide(entity);\r\n          } else if (entity.currentState === entity.states.sliding) {\r\n            this.enemyDeath(entity, data);\r\n          } else {\r\n            this.koopaHide(entity);\r\n          }\r\n        }\r\n\r\n        if (mario.yPos > entity.yPos &&\r\n          (mario.xPos + mario.width) >= entity.xPos &&\r\n          mario.xPos < (entity.xPos + entity.width)) {\r\n          mario.velY = 1.2;\r\n          mario.xPos = entity.xPos;\r\n          if (mario.bigMario) {\r\n            this.marioShrink(mario);\r\n          } else {\r\n            mario.currentState = mario.states.dead;\r\n            this.marioDeath(data);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (entity.type === 'mushroom') {\r\n      mario.bigMario = true;\r\n      mario.height = 32;\r\n      mario.powerupSound.play();\r\n\r\n      const index = data.entities.mushrooms.indexOf(entity);\r\n      delete data.entities.mushrooms[index];\r\n    }\r\n\r\n    if (entity.type === 'coin') {\r\n      data.entities.score.value += 50;\r\n      data.entities.score.coinCount += 1;\r\n      entity.coinSound.play();\r\n\r\n      const index = data.entities.coins.indexOf(entity);\r\n      delete data.entities.coins[index];\r\n    }\r\n  },\r\n\r\n  marioFallingCheck(data) {\r\n    if (data.entities.mario.yPos >= 210) {\r\n      data.entities.mario.deathSound.play();\r\n      data.userControl = false;\r\n\r\n      setTimeout(() => {\r\n        data.reset();\r\n      }, 3000);\r\n    }\r\n  },\r\n\r\n  marioDeath(data) {\r\n    data.userControl = false;\r\n    data.sounds.backgroundMusic.pause();\r\n    data.entities.mario.deathSound.play();\r\n\r\n    setTimeout(() => {\r\n      data.entities.mario.height = 16;\r\n      data.entities.mario.type = 'dead';\r\n      data.entities.mario.velY -= 13;\r\n    }, 500);\r\n\r\n    setTimeout(() => {\r\n      data.reset();\r\n    }, 3000);\r\n  },\r\n  // freeze one sec while resize. return to movement\r\n  marioShrink(mario) {\r\n    mario.bigMario = false;\r\n    mario.powerdownSound.play();\r\n    mario.type = 'invincible';\r\n    mario.currentState = mario.states.resizing;\r\n\r\n    setTimeout(() => {\r\n      mario.currentState = mario.states.standing;\r\n      mario.height = 16;\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      mario.type = 'mario';\r\n    }, 1500);\r\n  },\r\n\r\n  koopaHide(entity) {\r\n    entity.type = 'invulnerable';\r\n    entity.currentState = entity.states.hiding; // koopa stomp\r\n\r\n    setTimeout(() => {\r\n      entity.type = 'koopa';\r\n    }, 200);\r\n  },\r\n\r\n  koopaSlide(entity) {\r\n    entity.type = 'invulnerable';\r\n    entity.currentState = entity.states.sliding;\r\n\r\n    setTimeout(() => {\r\n      entity.type = 'koopa';\r\n    }, 200);\r\n  },\r\n\r\n  enemyDeath(entity, data) {\r\n    if (entity.type === 'goomba') {\r\n      data.entities.score.value += 100;\r\n      entity.currentState = entity.states.dead;\r\n      entity.type = 'dying';\r\n      entity.squishSound.play();\r\n\r\n      setTimeout(() => {\r\n        const index = data.entities.goombas.indexOf(entity);\r\n        delete data.entities.goombas[index];\r\n      }, 800);\r\n    } else {\r\n      data.entities.score.value += 100;\r\n      entity.velY -= 10;\r\n      entity.type = 'dead';\r\n\r\n      setTimeout(() => {\r\n        const index = data.entities.koopas.indexOf(entity);\r\n        delete data.entities.koopas[index];\r\n      }, 400);\r\n    }\r\n  },\r\n\r\n  levelFinish(data) {\r\n    data.entities.mario.velX = 0;\r\n    data.entities.mario.velY = 0;\r\n    data.entities.mario.xPos += 3;\r\n\r\n    data.sounds.backgroundMusic.pause();\r\n    data.sounds.levelFinish.play();\r\n\r\n    setTimeout(() => {\r\n      data.reset();\r\n    }, 6000);\r\n  },\r\n\r\n  sceneryCollisionDetection(data) {\r\n    this.sceneryCollisionCheck(data, [data.entities.mario], data.entities.scenery);\r\n    this.sceneryCollisionCheck(data, data.entities.mushrooms, data.entities.scenery);\r\n    this.sceneryCollisionCheck(data, data.entities.goombas, data.entities.scenery);\r\n    this.sceneryCollisionCheck(data, data.entities.koopas, data.entities.scenery);\r\n  },\r\n\r\n  sceneryCollisionCheck(data, entities, scenery) {\r\n    entities.forEach((entity) => {\r\n      scenery.forEach((scene) => {\r\n        if (entity.xPos < scene.xPos + scene.width &&\r\n          entity.xPos + entity.width > scene.xPos &&\r\n          entity.yPos < scene.yPos + scene.height &&\r\n          entity.height + entity.yPos > scene.yPos) {\r\n          // Collision Occured\r\n          if (scene.type === 'flag') {\r\n            this.levelFinish(data);\r\n          } else if (scene.type !== 'shrub' &&\r\n            scene.type !== 'cloud' &&\r\n            scene.type !== 'mountain') {\r\n            this.sceneryCollision(data, entity, scene);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  },\r\n\r\n  sceneryCollision(data, entity, scene) {\r\n    // Left side\r\n    if (entity.xPos < scene.xPos && entity.yPos >= scene.yPos) {\r\n      if (scene.type === 'pipe' || scene.type === 'brick') {\r\n        entity.xPos = scene.xPos - entity.width - 1;\r\n      } else {\r\n        entity.xPos = scene.xPos - entity.width;\r\n      }\r\n\r\n      if ((entity.type === 'goomba') ||\r\n        (entity.type === 'koopa') ||\r\n        (entity.type === 'mushroom')) {\r\n        entity.direction = entity.direction === 'left' ? 'right' : 'left';\r\n      }\r\n    }\r\n    // Right side\r\n    if (entity.xPos > scene.xPos && entity.yPos >= scene.yPos) {\r\n      entity.xPos = scene.xPos + scene.width;\r\n\r\n      if ((entity.type === 'goomba') ||\r\n        (entity.type === 'koopa') ||\r\n        (entity.type === 'mushroom')) {\r\n        entity.direction = entity.direction === 'left' ? 'right' : 'left';\r\n      }\r\n    }\r\n    // Top\r\n    if (entity.yPos < scene.yPos &&\r\n      (entity.xPos + entity.width) > scene.xPos &&\r\n      entity.xPos < (scene.xPos + scene.width) && entity.velY >= 0) {\r\n\r\n      if (entity.type !== 'dead') { // fall through ground when dead\r\n        if (entity.type === 'mario') {\r\n          if (entity.bigMario) {\r\n            entity.currentState = entity.states.bigStanding;\r\n          } else {\r\n            entity.currentState = entity.states.standing;\r\n          }\r\n        }\r\n        entity.yPos = scene.yPos - entity.height - 1;\r\n        entity.velY = 0;\r\n      }\r\n    }\r\n    // Bot\r\n    if (entity.yPos >= scene.yPos &&\r\n      (entity.xPos + entity.width) >= scene.xPos &&\r\n      entity.xPos < (scene.xPos + scene.width) && entity.velY < 0) {\r\n      if (scene.type === 'block') {\r\n        if (scene.contents === 'coin') {\r\n          scene.collectCoin(data);\r\n        } else if (scene.contents === 'mushroom') {\r\n          scene.createMushroom(data);\r\n        }\r\n        scene.sprite = scene.used;\r\n      } else if (scene.type === 'breakable') {\r\n        if (entity.bigMario) {\r\n          data.sounds.breakSound.play();\r\n          scene.type = 'shrub';\r\n          const index = data.mapBuilder.breakableEntities.indexOf(scene);\r\n          delete data.mapBuilder.breakableEntities[index];\r\n        } else {\r\n          entity.bumpSound.play();\r\n        }\r\n      }\r\n      entity.yPos = entity.yPos + entity.height;\r\n      entity.xPos = scene.xPos;\r\n      entity.velY = 1.2;\r\n    }\r\n  },\r\n\r\n  gravity(entity) {\r\n    entity.velY += 1.2;\r\n    entity.yPos += entity.velY;\r\n  },\r\n};\r\n\r\nexport { physics as default };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util/physics.js\n// module id = 11\n// module chunks = 0","const render = {\r\n  init(data) {\r\n    data.entities.scenery = [];\r\n    data.mapBuilder.create(data);\r\n  },\r\n\r\n  // Clear canvas and redraw entities\r\n  update(data) {\r\n    data.canvas.ctx.clearRect(0, 0, 760, 600);\r\n    data.canvas.ctx.fillStyle = '#63adff';\r\n    data.canvas.ctx.fillRect(0, 0, 760, 600);\r\n\r\n    data.mapBuilder.renderMap(data);\r\n\r\n    data.entities.coins.forEach((coin) => {\r\n      this.drawEntity(coin, data);\r\n    });\r\n\r\n    data.entities.mushrooms.forEach((mushroom) => {\r\n      this.drawEntity(mushroom, data);\r\n    });\r\n\r\n    data.entities.goombas.forEach((goomba) => {\r\n      this.drawEntity(goomba, data);\r\n    });\r\n\r\n    data.entities.koopas.forEach((koopa) => {\r\n      this.drawEntity(koopa, data);\r\n    });\r\n\r\n    this.drawText(data);\r\n    this.drawEntity(data.entities.mario, data);\r\n  },\r\n\r\n  // Only draw entities that fall in viewport\r\n  drawEntity(entity, data) {\r\n    if (((entity.xPos + entity.width >= data.viewport.vX &&\r\n          entity.xPos + entity.width <= data.viewport.vX + data.viewport.width)) &&\r\n        ((entity.yPos + entity.height >= data.viewport.vY &&\r\n          entity.yPos + entity.height <= data.viewport.vY + data.viewport.height))) {\r\n      data.canvas.ctx.drawImage(\r\n        entity.sprite.img,\r\n        entity.sprite.srcX, entity.sprite.srcY,\r\n        entity.sprite.srcW, entity.sprite.srcH,\r\n        entity.xPos - data.viewport.vX, entity.yPos - data.viewport.vY,\r\n        entity.width, entity.height,\r\n      );\r\n    }\r\n  },\r\n\r\n  // Render hud\r\n  drawText(data) {\r\n    const text = data.entities.score;\r\n\r\n    data.canvas.ctx.font = `${text.size} ${text.font}`;\r\n    data.canvas.ctx.fillStyle = text.color;\r\n    data.canvas.ctx.fillText(\r\n      `Score: ${text.value}`, text.xPos - (data.viewport.width / 3), text.yPos,\r\n    );\r\n  },\r\n};\r\n\r\nexport { render as default };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util/render.js\n// module id = 12\n// module chunks = 0","import Entity from './entity';\r\nimport Sprite from './sprite';\r\nimport Coin from './coin';\r\nimport Mushroom from './mushroom';\r\n\r\nexport default class Block extends Entity {\r\n  constructor(contents, tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 433, 1, 17, 17);\r\n    super('block', sprite, xPos, yPos, width, height);\r\n\r\n    this.contents = contents;\r\n    this.coinSound = new Audio('./assets/audio/sounds/coin.wav');\r\n    this.powerupSpawnSound = new Audio('./assets/audio/sounds/powerup_spawn.wav');\r\n    this.used = new Sprite(tileset, 486, 0, 18, 18);\r\n    this.tileset = tileset;\r\n  }\r\n\r\n  createMushroom(data) {\r\n    const mushroom = new Mushroom(data.spriteSheet, this.xPos, this.yPos - 18, 16, 16);\r\n    data.entities.mushrooms.push(mushroom);\r\n    this.powerupSpawnSound.play();\r\n    this.contents = 'empty';\r\n  }\r\n\r\n  collectCoin(data) {\r\n    const coin = new Coin(this.tileset, this.xPos - 2, this.yPos - 18, 18, 18);\r\n\r\n    data.entities.score.value += 50;\r\n    data.entities.score.coinCount += 1;\r\n    this.contents = 'empty';\r\n    this.coinSound.play();\r\n\r\n    coin.currentState = coin.states.blockCoin;\r\n    data.entities.coins.push(coin);\r\n\r\n    setTimeout(() => {\r\n      const index = data.entities.coins.indexOf(coin);\r\n      delete data.entities.coins[index];\r\n    }, 50);\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/block.js\n// module id = 13\n// module chunks = 0","import Entity from './entity';\r\nimport Sprite from './sprite';\r\n\r\nexport default class Breakable extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 18, 0, 18, 18);\r\n    super('breakable', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/breakable.js\n// module id = 14\n// module chunks = 0","import Entity from './entity';\r\nimport Sprite from './sprite';\r\n\r\nexport default class Coin extends Entity {\r\n  constructor(spriteSheet, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(spriteSheet, 5, 5, 10, 14);\r\n    super('coin', sprite, xPos, yPos, width, height);\r\n\r\n    const self = this;\r\n    this.type = 'coin';\r\n    this.coinSound = new Audio('./assets/audio/sounds/coin.wav');\r\n\r\n    this.tileset = new Image();\r\n    this.tileset.src = './assets/sprites/tileset_gutter.png';\r\n\r\n    this.spriteAnimations = {\r\n      spin: {\r\n        frames: [\r\n          new Sprite(spriteSheet, 5, 5, 10, 14),\r\n          new Sprite(spriteSheet, 21, 5, 10, 14),\r\n          new Sprite(spriteSheet, 37, 5, 10, 14),\r\n          new Sprite(spriteSheet, 53, 5, 10, 14),\r\n        ],\r\n        currentFrame: 0,\r\n      },\r\n      blockCoin: new Sprite(this.tileset, 486, 18, 18, 18),\r\n    };\r\n\r\n    this.states = {\r\n      spinning: {\r\n        animation(data) {\r\n          if (data.animationFrame % 13 === 0) {\r\n            self.sprite =\r\n              self.spriteAnimations.spin.frames[self.spriteAnimations.spin.currentFrame];\r\n            self.spriteAnimations.spin.currentFrame += 1;\r\n\r\n            if (self.spriteAnimations.spin.currentFrame > 3) {\r\n              self.spriteAnimations.spin.currentFrame = 0;\r\n            }\r\n          }\r\n        },\r\n      },\r\n\r\n      blockCoin: {\r\n        animation(data) {\r\n          self.sprite = self.spriteAnimations.blockCoin;\r\n        },\r\n      },\r\n    };\r\n    this.currentState = this.states.spinning;\r\n    this.xPos = xPos;\r\n    this.yPos = yPos;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/coin.js\n// module id = 15\n// module chunks = 0","import Entity from './entity';\r\nimport Sprite from './sprite';\r\n\r\nexport default class Mushroom extends Entity {\r\n  constructor(img, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(img, 625, 5, 16, 16);\r\n    super('mushroom', sprite, xPos, yPos, width, height);\r\n\r\n    const self = this;\r\n\r\n    this.spriteAnimations = {\r\n      moving: new Sprite(img, 625, 5, 16, 16),\r\n    };\r\n\r\n    this.states = {\r\n      moving: {\r\n        movement(data) {\r\n          if (self.direction === 'left') {\r\n            self.xPos -= self.velX;\r\n          } else {\r\n            self.xPos += self.velX;\r\n          }\r\n        },\r\n        animation(data) {\r\n          self.sprite = self.spriteAnimations.moving;\r\n        },\r\n      },\r\n    };\r\n\r\n    this.currentState = this.states.moving;\r\n    this.direction = 'right';\r\n    this.velY = 0;\r\n    this.velX = 1.3;\r\n    this.xPos = xPos;\r\n    this.yPos = yPos;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/mushroom.js\n// module id = 16\n// module chunks = 0","import Entity from './entity';\r\nimport Sprite from './sprite';\r\n\r\nclass Ground extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 0, 0, 16, 16);\r\n    super('ground', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nclass Pipe extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 0, 180, 35, 35);\r\n\r\n    super('pipe', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\nclass Brick extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 0, 18, 18, 18);\r\n\r\n    super('brick', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\nclass Shrub extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 198.5, 162.5, 53, 17);\r\n\r\n    super('shrub', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nclass Mountain extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 0, 0, 90, 39);\r\n\r\n    super('mountain', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nclass SmallCloud extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 64.5, 0, 33, 24);\r\n\r\n    super('cloud', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nclass MediumCloud extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 0, 24.5, 48, 24);\r\n\r\n    super('cloud', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nclass LargeCloud extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 0, 0, 64, 24);\r\n\r\n    super('cloud', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nclass Flag extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 289, 153, 16, 27);\r\n\r\n    super('flag', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nclass Flagpole extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 289, 163, 16, 18);\r\n\r\n    super('flag', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nclass Castle extends Entity {\r\n  constructor(tileset, xPos, yPos, width, height) {\r\n    const sprite = new Sprite(tileset, 0, 0, 80, 80);\r\n\r\n    super('flag', sprite, xPos, yPos, width, height);\r\n  }\r\n}\r\n\r\nexport {\r\n  Ground,\r\n  Pipe,\r\n  Brick,\r\n  Shrub,\r\n  Mountain,\r\n  SmallCloud,\r\n  MediumCloud,\r\n  LargeCloud,\r\n  Flag,\r\n  Flagpole,\r\n  Castle,\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entities/scenery.js\n// module id = 17\n// module chunks = 0","import render from './util/render';\r\nimport input from './util/input';\r\nimport animation from './util/animation';\r\nimport movement from './util/movement';\r\nimport physics from './util/physics';\r\n\r\nimport { levelOne } from './map/level_1-1';\r\nimport MapBuilder from './map/map_builder';\r\n\r\nimport Mario from './entities/mario';\r\nimport Goomba from './entities/goomba';\r\nimport Koopa from './entities/koopa';\r\nimport Score from './entities/score';\r\n\r\n// todos: animate blocks. mario duck/run. enemy collisions\r\n\r\nclass Game {\r\n  init() {\r\n    const canvasEl = document.getElementById('game-canvas');\r\n    const ctx = canvasEl.getContext('2d');\r\n    ctx.scale(3, 3);\r\n\r\n    const canvas = {\r\n      canvas: canvasEl,\r\n      ctx,\r\n    };\r\n\r\n    const viewport = {\r\n      width: 760,\r\n      height: 600,\r\n      vX: 0,\r\n      vY: 0,\r\n    };\r\n\r\n    const backgroundMusic = document.getElementById('background_music');\r\n\r\n    // Add mute button\r\n    this.muted = false;\r\n\r\n    document.getElementById('mute-button').addEventListener('click', (e) => {\r\n      backgroundMusic.muted = !backgroundMusic.muted;\r\n      if (this.muted) {\r\n        this.muted = false;\r\n        e.target.className = '';\r\n      } else {\r\n        this.muted = true;\r\n        e.target.className += 'muted';\r\n      }\r\n      e.preventDefault();\r\n    }, false);\r\n\r\n    const spriteSheet = new Image();\r\n    spriteSheet.src = '/static/mario_js/assets/sprites/spritesheet.png';\r\n\r\n    const tileset = new Image();\r\n    tileset.src = '/static/mario_js/assets/sprites/tileset_gutter.png';\r\n\r\n    spriteSheet.addEventListener('load', () => {\r\n      const data = {\r\n        spriteSheet,\r\n        canvas,\r\n        viewport,\r\n        animationFrame: 0,\r\n        mapBuilder: new MapBuilder(levelOne, tileset, spriteSheet),\r\n        entities: {},\r\n        sounds: {\r\n          backgroundMusic,\r\n          breakSound: new Audio('/static/mario_js/assets/audio/sounds/break_block.wav'),\r\n          levelFinish: new Audio('/static/mario_js/assets/audio/music/level_complete.mp3'),\r\n        },\r\n        userControl: true,\r\n        reset: this.reset,\r\n      };\r\n\r\n      const mario = new Mario(spriteSheet, 175, 0, 16, 16);\r\n      const score = new Score(270, 15);\r\n\r\n      input.init(data);\r\n      data.entities.mario = mario;\r\n      data.entities.score = score;\r\n      data.entities.coins = [];\r\n      data.entities.mushrooms = [];\r\n      data.entities.goombas = [];\r\n      data.entities.koopas = [];\r\n\r\n      // Load enemies from map\r\n      levelOne.koopas.forEach((koopa) => {\r\n        data.entities.koopas.push(\r\n          new Koopa(spriteSheet, koopa[0], koopa[1], koopa[2], koopa[3]));\r\n      });\r\n\r\n      levelOne.goombas.forEach((goomba) => {\r\n        data.entities.goombas.push(\r\n          new Goomba(spriteSheet, goomba[0], goomba[1], goomba[2], goomba[3]));\r\n      });\r\n\r\n      render.init(data);\r\n      this.run(data);\r\n    });\r\n  }\r\n\r\n  run(data) {\r\n    const loop = () => {\r\n      input.update(data);\r\n      animation.update(data);\r\n      movement.update(data);\r\n      physics.update(data);\r\n\r\n      Game.updateView(data);\r\n      render.update(data);\r\n\r\n      data.animationFrame += 1;\r\n      window.requestAnimationFrame(loop);\r\n    };\r\n\r\n    loop();\r\n  }\r\n\r\n  // Update viewport to follow Mario\r\n  static updateView(data) {\r\n    const viewport = data.viewport;\r\n    const margin = viewport.width / 6;\r\n    const center = {\r\n      x: data.entities.mario.xPos + (data.entities.mario.width * 0.5),\r\n      y: data.entities.mario.yPos + (data.entities.mario.height * 0.5),\r\n    };\r\n\r\n    if (center.x < viewport.vX + (margin * 2)) {\r\n      viewport.vX = Math.max(center.x - margin, 0);\r\n    } else if (center.x > (viewport.vX + viewport.width) - (margin * 2)) {\r\n      viewport.vX = Math.min((center.x + margin) - viewport.width, 3400 - viewport.width);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    location.reload();\r\n  }\r\n}\r\n\r\nconst game = new Game();\r\ngame.init();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 18\n// module chunks = 0"],"sourceRoot":""}